// APP START
// ****************************
// /www/app/assets/app.js is autogenerated. Do not modify.
// Changes should be made in /master/modules/js or /master/components/<component-name>/js
// ****************************
// -----------------------------------

var app = angular.module('krakenApp', ['ngRoute','ngMaterial', 'krakenApp.config', 'krakenApp.Graph', 'krakenApp.services']);

app.controller('PageCtrl', ['$scope', '$mdSidenav', function($scope, $mdSidenav){
  console.log("loading page controller.");
  $scope.toggleSidenav = function(menuId) {
    $mdSidenav(menuId).toggle();
  };

}]);

// stub for config
angular.module("krakenApp.config", []);

angular.module('krakenApp.services',[])
  .factory('globalsFactory', ['ENV', function(ENV){
    return {
        getConstant: function(constantName){
          if (ENV[constantName]) {
            return ENV[constantName];
          } else {
            return false;
          }
        }  
    }
}]);

app.run(function($rootScope, globalsFactory) {
  $rootScope._globals = globalsFactory;
});

app.config(function(k8sApiProvider, ENV){
  if (ENV['k8sApiServer']) {
    k8sApiProvider.setUrlBase(ENV.k8sApiServer);
  }
});

app.config(function(pollK8sDataServiceProvider, ENV){
  if (ENV['k8sDataServer']) {
    pollK8sDataServiceProvider.setEndpointUrl(ENV.k8sDataServer);
  }
  if (ENV['k8sDataPollIntervalSec']) {
    pollK8sDataServiceProvider.setPollIntervalSec(ENV.k8sDataPollIntervalSec);
  }
  if (ENV['k8sDataPollErrorThreshold']) {
    pollK8sDataServiceProvider.setPollErrorThreshold(ENV.k8sDataPollErrorThreshold);
  }
});

}]);
