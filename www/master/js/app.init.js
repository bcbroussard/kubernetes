// APP START
// ****************************
// /www/app/assets/app.js is autogenerated. Do not modify.
// Changes should be made in /master/modules/js or /master/components/<component-name>/js
// ****************************
// -----------------------------------

var app = angular.module('krakenApp', ['ngRoute','ngMaterial', 'ngLodash', 'krakenApp.config'].concat(componentNamespaces))

.factory('menu', [
  '$location',
  '$rootScope',
  'sections',
function($location, $rootScope, sections) {

  var self;

  $rootScope.$on('$locationChangeSuccess', onLocationChange);

  return self = {
    selectSection: function(section) {
      self.openedSection = section;
    },
    selectPage: function(section, page) {
      page && page.url && $location.path(page.url);
      self.currentSection = section;
      self.currentPage = page;
    },
    isPageSelected: function(page) {
      return self.currentPage === page;
    }
  };

  function onLocationChange() {
    var path = $location.path();

    var matchPage = function(section, page) {
      if (path === page.url) {
        self.selectSection(section);
        self.selectPage(section, page);
      }
    };

    sections.forEach(function(section) {
      if(section.children) {
        section.children.forEach(function(childSection){
          if(childSection.pages){
            childSection.pages.forEach(function(page){
              matchPage(childSection, page);
            });
          }
        });
      }
      else if(section.pages) {
        section.pages.forEach(function(page) {
          matchPage(section, page);
        });
      }
      else if (section.type === 'link') {
        matchPage(section, section);
      }
    });
  }
}]).factory('globalsFactory', [
    'ENV',
    'SidebarService',
  function(ENV, SidebarService){
    return {
        getConstant: function(constantName) {
          if (ENV[constantName]) {
            return ENV[constantName];
          } else {
            return false;
          }
        },
        addSidebarItem: function(item) {
          SidebarService.addSidebarItem(item);
        },
        clearSidebarItems: function() {
          SidebarService.clearSidebarItems();
        },
        renderSidebar: function() {
          SidebarService.renderSidebar();
        }
    }
}]);
